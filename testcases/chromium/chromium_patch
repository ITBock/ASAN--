diff --git a/build/config/compiler/BUILD.gn b/build/config/compiler/BUILD.gn
index 65a8847..f74308d9 100644
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -1118,7 +1118,7 @@ config("chromium_code") {
   } else {
     cflags = [ "-Wall" ]
     if (treat_warnings_as_errors) {
-      cflags += [ "-Werror" ]
+      # cflags += [ "-Werror" ]

       # The compiler driver can sometimes (rarely) emit warnings before calling
       # the actual linker.  Make sure these warnings are treated as errors as
@@ -1179,7 +1179,7 @@ config("no_chromium_code") {
     # GCC may emit unsuppressible warnings so don't add -Werror for no chromium
     # code. crbug.com/589724
     if (treat_warnings_as_errors && is_clang) {
-      cflags += [ "-Werror" ]
+      # cflags += [ "-Werror" ]
       ldflags = [ "-Werror" ]
     }
     if (is_clang && !is_nacl) {
diff --git a/build/config/sanitizers/BUILD.gn b/build/config/sanitizers/BUILD.gn
index 5b072ce..ccbc970 100644
--- a/build/config/sanitizers/BUILD.gn
+++ b/build/config/sanitizers/BUILD.gn
@@ -199,7 +199,7 @@ config("default_sanitizer_ldflags") {
   if (is_posix) {
     ldflags = []
     if (is_asan) {
-      ldflags += [ "-fsanitize=address" ]
+      ldflags += [ "-fsanitize=address", "-fsanitize-recover=address", ]
       if (!is_mac) {
         ldflags += [ "-fsanitize-address-use-after-scope" ]
       }
@@ -311,7 +311,7 @@ config("common_sanitizer_flags") {
 config("asan_flags") {
   cflags = []
   if (is_asan) {
-    cflags += [ "-fsanitize=address" ]
+    cflags += [ "-fsanitize=address", "-fsanitize-recover=address", ]
     if (!is_mac && !is_win) {
       cflags += [ "-fsanitize-address-use-after-scope" ]
     }